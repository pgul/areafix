# $Id$
#
# Microsoft Visual C++ Makefile for build static program(s)
# No support for the Husky build environment.
#
# Tested on MS Visual C 6.0
#
include makefile.inc

## programs ##

CC	= cl
AR	= lib
LINK	= link
RANLIB	=
RM	= del

## file suffixes ##
_C	= .c
_OBJ	= .obj
_LIB	= .lib
_EXE	= .exe
_DLL	= .dll
_EXP	= .exp
_ILK	= .ilk
_PDB	= .pdb

## program options ##
CFLAGS=-nologo -Zp1
CINCL = -I$(H_DIR) -I..\..\fidoconf -I..\..\smapi -I..\..\huskylib
LFLAGS= /link /opt:nowin98
CDEFS =-D__NT__ -D_CONSOLE
COPT  = -Ob2
# DLL additional
CFLAGS_DLL= -D_MAKE_DLL -MD
LFLAGS_DLL= msvcrt.lib Kernel32.lib /nologo /opt:nowin98 /dll /nodefaultlib /implib:$(TARGETLIB)

EXENAMEFLAG=-Fe

# List of HUSKY libraries required to build binary file(s)
LIBS	= ..\..\fidoconf\make\fconfmvc.lib \
          ..\..\smapi\make\smapimvc.lib \
	  ..\..\huskylib\make\huskymvc.lib

default:
	@echo Run 'make static' to build static version ($(TARGETLIB))
	@echo Run 'make dll' to build dynamic version ($(TARGETDLL))
	@echo Run 'make all' to build all above

all: static dll

static: $(TARGETLIB)

dll: $(TARGETDLL)

{$(_SRC_DIR)}.c$(_OBJ):
	@$(CC) $(CFLAGS) $(CINCL) $(CDEFS) $(COPT) -c $<

$(TARGETLIB): $(OBJS)
        $(AR) /out:$(LIBNAME)$(_LIB) $(OBJS)

$(TARGETDLL):
	!$(MAKE) -f makefile.mvc CFLAGS="$(CFLAGS) $(CFLAGS_DLL) -DDLLEXPORT" $(OBJS)
	$(LINK) $(LFLAGS_DLL) /out:$(TARGETDLL) $(OBJS) $(LIBS)

clean:
	-$(RM) $(RMOPT) *$(_OBJ)

distclean: clean
	-$(RM) $(RMOPT) $(TARGETLIB)
	-$(RM) $(RMOPT) $(TARGETDLL)
	-$(RM) $(RMOPT) $(TARGETDLL).*
